{
  "openapi": "3.0.0",
  "info": {
    "title": "GP Appointment API",
    "version": "1.0.0",
    "description": "API to manage appointments with doctors"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://api.gpbooking.icu"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CreateDoctorDTO": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "The first name of the doctor"
          },
          "LastName": {
            "type": "string",
            "description": "The last name of the doctor"
          },
          "Workplace": {
            "type": "string",
            "description": "The workplace of the doctor"
          },
          "Specialty": {
            "type": "string",
            "description": "The specialty of the doctor"
          },
          "Phone": {
            "type": "string",
            "description": "The phone number of the doctor"
          },
          "Email": {
            "type": "string",
            "description": "The email of the doctor"
          },
          "Address": {
            "type": "string",
            "description": "The address where the doctor works"
          }
        }
      },
      "DoctorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDoctorDTO"
          }
        ]
      },
      "UpdateDoctorDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DoctorProperties"
          },
          {
            "type": "object",
            "properties": {
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "DoctorDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DoctorProperties"
          },
          {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string",
                "description": "The ID of the doctor"
              },
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "CreateScheduleDTO": {
        "type": "object",
        "properties": {
          "DoctorId": {
            "type": "string",
            "description": "The ID of the doctor"
          },
          "DoctorName": {
            "type": "string",
            "description": "The name of the doctor"
          },
          "Date": {
            "type": "string",
            "format": "date",
            "description": "The date of the schedule"
          },
          "StartTime": {
            "type": "string",
            "format": "time",
            "description": "The start time of the schedule"
          },
          "EndTime": {
            "type": "string",
            "format": "time",
            "description": "The end time of the schedule"
          }
        }
      },
      "ScheduleProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateScheduleDTO"
          },
          {
            "type": "object",
            "properties": {
              "Status": {
                "type": "string",
                "description": "The status of the schedule",
                "enum": [
                  "available",
                  "occupied"
                ]
              }
            }
          }
        ]
      },
      "UpdateScheduleDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ScheduleProperties"
          },
          {
            "type": "object",
            "properties": {
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "ScheduleDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ScheduleProperties"
          },
          {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string",
                "description": "The ID of the schedule"
              },
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "CreatePatientDTO": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of the patient"
          },
          "Gender": {
            "type": "string",
            "description": "Gender of the patient"
          },
          "Age": {
            "type": "integer",
            "description": "Age of the patient"
          },
          "Phone": {
            "type": "string",
            "description": "Contact phone number of the patient"
          },
          "Email": {
            "type": "string",
            "description": "Email address of the patient"
          },
          "Address": {
            "type": "string",
            "description": "Address of the patient"
          }
        }
      },
      "PatientProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreatePatientDTO"
          },
          {
            "type": "object",
            "properties": {
              "UserId": {
                "type": "string",
                "description": "The ID of the user"
              }
            }
          }
        ]
      },
      "UpdatePatientDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatientProperties"
          },
          {
            "type": "object",
            "properties": {
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "PatientDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatientProperties"
          },
          {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string",
                "description": "The ID of the patient"
              },
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "CreateAppointmentDTO": {
        "type": "object",
        "properties": {
          "ScheduleId": {
            "type": "string",
            "description": "The ID of the schedule"
          },
          "FirstName": {
            "type": "string",
            "description": "The first name of the patient"
          },
          "LastName": {
            "type": "string",
            "description": "The last name of the patient"
          },
          "DateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "The date of birth of the patient"
          },
          "Phone": {
            "type": "string",
            "description": "The phone number of the patient"
          },
          "Email": {
            "type": "string",
            "description": "The email of the patient"
          },
          "Address": {
            "type": "string",
            "description": "The address of the patient"
          }
        }
      },
      "AppointmentProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateAppointmentDTO"
          },
          {
            "$ref": "#/components/schemas/CreateScheduleDTO"
          },
          {
            "type": "object",
            "properties": {
              "BookingReference": {
                "type": "string",
                "description": "The booking reference of the appointment"
              },
              "Status": {
                "type": "string",
                "description": "The status of the appointment",
                "enum": [
                  "active",
                  "cancelled",
                  "completed"
                ]
              }
            }
          }
        ]
      },
      "AppointmentDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AppointmentProperties"
          },
          {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string",
                "description": "The ID of the appointment"
              },
              "Version": {
                "type": "integer",
                "description": "The version of the record"
              }
            }
          }
        ]
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "The ID of the user"
          },
          "Roles": {
            "type": "array",
            "description": "The roles of the user",
            "items": {
              "type": "string"
            }
          },
          "Providers": {
            "type": "array",
            "description": "The providers of the user",
            "items": {
              "type": "object",
              "properties": {
                "Provider": {
                  "type": "string"
                },
                "ProviderId": {
                  "type": "string"
                }
              }
            }
          },
          "Version": {
            "type": "integer"
          }
        }
      }
    }
  },
  "paths": {
    "/admin/appointments": {
      "get": {
        "summary": "Get a list of appointments",
        "description": "Get a list of appointments",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "doctorId",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The doctor ID"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The start date of the appointment"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The end date of the appointment"
          }
        ],
        "responses": {
          "200": {
            "description": "return a list of appointments based on the query"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/appointments/{appointmentId}": {
      "delete": {
        "summary": "Delete an appointment by ID",
        "description": "Delete an appointment by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the appointment to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Appointment deleted successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/appointments/{appointmentId}/complete": {
      "post": {
        "summary": "Complete an appointment",
        "description": "Complete an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the completed appointment"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/doctors": {
      "post": {
        "summary": "Create a new doctor",
        "description": "Create a new doctor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doctor created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/doctors/{doctorId}": {
      "get": {
        "summary": "Get a doctor by ID",
        "description": "Get a doctor by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the doctor to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Doctor retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Doctor not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a doctor by ID",
        "description": "Update a doctor by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the doctor to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDoctorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a doctor by ID",
        "description": "Delete a doctor by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the doctor to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Doctor deleted successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "List users",
        "description": "List users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Sign up a new user",
        "description": "Sign up a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "password"
                  },
                  "roles": {
                    "type": "array",
                    "description": "roles",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/admin/users/doctor": {
      "post": {
        "summary": "Sign up a new doctor",
        "description": "Sign up a new doctor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "doctorId": {
                    "type": "string",
                    "description": "doctorId"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor signed up successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/admin/users/{userId}": {
      "delete": {
        "summary": "Delete a user by ID",
        "description": "Delete a user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/schedules": {
      "get": {
        "summary": "List working schedules",
        "description": "List working schedules",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "doctorId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by doctor's ID"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by schedule start date"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by schedule end date"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of working schedules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new working schedule",
        "description": "Create a new working schedule",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduleDTO",
                "required": [
                  "DoctorId",
                  "Date",
                  "StartTime",
                  "EndTime"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Schedule created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/schedules/{scheduleId}": {
      "put": {
        "summary": "Update an existing working schedule",
        "description": "Update an existing working schedule",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the schedule to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScheduleDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schedule updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing working schedule",
        "description": "Delete an existing working schedule",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the schedule to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Schedule deleted successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/doctor/appointments": {
      "get": {
        "summary": "List appointments",
        "description": "List appointments",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The start date of the appointment"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The end date of the appointment"
          }
        ],
        "responses": {
          "200": {
            "description": "return a list of appointments based on the query"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/doctor/appointments/{appointmentId}": {
      "get": {
        "summary": "Get an appointment by ID",
        "description": "Get an appointment by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an appointment",
        "description": "Update an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return the updated appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/doctor/appointments/{appointmentId}/reschedule": {
      "post": {
        "summary": "Reschedule an appointment",
        "description": "Reschedule an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ScheduleId"
                ],
                "properties": {
                  "ScheduleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment rescheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/doctor/appointments/{appointmentId}/cancel": {
      "post": {
        "summary": "Cancel an appointment",
        "description": "Cancel an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the cancelled appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/doctor/appointments/{appointmentId}/complete": {
      "post": {
        "summary": "Complete an appointment",
        "description": "Complete an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the completed appointment"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/appointments": {
      "get": {
        "summary": "Get an appointment by booking reference, last name, and date of birth",
        "description": "Get an appointment by booking reference, last name, and date of birth",
        "parameters": [
          {
            "in": "query",
            "name": "reference",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The booking reference"
          },
          {
            "in": "query",
            "name": "lastname",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The last name of the patient"
          },
          {
            "in": "query",
            "name": "dob",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The date of birth of the patient"
          }
        ],
        "responses": {
          "200": {
            "description": "return a list of appointments based on the query"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new appointment",
        "description": "Create a new appointment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDTO",
                "required": [
                  "ScheduleId",
                  "LastName",
                  "DateOfBirth",
                  "Email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return the created appointment"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/public/appointments/reschedule": {
      "post": {
        "summary": "Reschedule an existing appointment",
        "description": "Reschedule an existing appointment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "BookingReference",
                  "LastName",
                  "DateOfBirth",
                  "ScheduleId"
                ],
                "properties": {
                  "BookingReference": {
                    "type": "string"
                  },
                  "LastName": {
                    "type": "string"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "format": "date"
                  },
                  "ScheduleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment rescheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "The appointment is linked to a user, please login to reschedule"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/appointments/cancel": {
      "post": {
        "summary": "Cancel an existing appointment",
        "description": "Cancel an existing appointment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "BookingReference",
                  "LastName",
                  "DateOfBirth"
                ],
                "properties": {
                  "BookingReference": {
                    "type": "string"
                  },
                  "LastName": {
                    "type": "string"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/auth/signup": {
      "post": {
        "summary": "Sign up",
        "description": "Sign up",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign up successful"
          },
          "400": {
            "description": "Sign up failed"
          }
        }
      }
    },
    "/public/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Login failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/auth/verify-email": {
      "post": {
        "summary": "Verify email",
        "description": "Verify email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified"
          },
          "401": {
            "description": "Verify email failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/auth/change-password": {
      "post": {
        "summary": "Change password",
        "description": "Change password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "oldPassword",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed"
          },
          "401": {
            "description": "Change password failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "newPassword"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset"
          },
          "401": {
            "description": "Reset password failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/auth/forgot-password": {
      "post": {
        "summary": "Forgot password",
        "description": "Forgot password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email sent"
          },
          "401": {
            "description": "Reset password email failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/chatbot": {
      "post": {
        "summary": "Chatbot",
        "description": "Chatbot",
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The access token"
          },
          {
            "in": "header",
            "name": "x-chatbot-session",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The chatbot session ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "prompt"
                ],
                "properties": {
                  "prompt": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chatbot response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string"
                    },
                    "response": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/clinics": {
      "get": {
        "summary": "List all clinics",
        "description": "List all clinics",
        "responses": {
          "200": {
            "description": "A list of clinics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "workplace": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/doctors": {
      "get": {
        "summary": "List doctors",
        "description": "List doctors",
        "parameters": [
          {
            "in": "query",
            "name": "firstname",
            "schema": {
              "type": "string"
            },
            "description": "Filter by doctor's first name"
          },
          {
            "in": "query",
            "name": "lastname",
            "schema": {
              "type": "string"
            },
            "description": "Filter by doctor's last name"
          },
          {
            "in": "query",
            "name": "workplace",
            "schema": {
              "type": "string"
            },
            "description": "Filter by doctor's workplace"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of doctors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/schedules/available-dates": {
      "get": {
        "summary": "Get available dates for a doctor",
        "parameters": [
          {
            "in": "query",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the doctor"
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The start date to filter available dates"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The end date to filter available dates"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available dates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/public/schedules/available-timeslots": {
      "get": {
        "summary": "Get available timeslots for a doctor on a specific date",
        "parameters": [
          {
            "in": "query",
            "name": "doctorId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the doctor"
          },
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The date to filter available timeslots"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available timeslots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "type": "string"
                      },
                      "StartTime": {
                        "type": "string",
                        "format": "time"
                      },
                      "EndTime": {
                        "type": "string",
                        "format": "time"
                      },
                      "Status": {
                        "type": "string",
                        "enum": [
                          "available",
                          "occupied"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/appointments": {
      "get": {
        "summary": "List appointments",
        "description": "List appointments",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "doctorId",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The doctor ID"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The start date of the appointment"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The end date of the appointment"
          }
        ],
        "responses": {
          "200": {
            "description": "return a list of appointments based on the query"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new appointment",
        "description": "Create a new appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDTO",
                "required": [
                  "ScheduleId",
                  "LastName",
                  "DateOfBirth",
                  "Email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return the created appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/user/appointments/{appointmentId}": {
      "get": {
        "summary": "Get an appointment by ID",
        "description": "Get an appointment by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update an appointment",
        "description": "Update an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return the updated appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/appointments/{appointmentId}/reschedule": {
      "post": {
        "summary": "Reschedule an appointment",
        "description": "Reschedule an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ScheduleId"
                ],
                "properties": {
                  "ScheduleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment rescheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "The appointment is linked to a user, please login to reschedule"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/appointments/{appointmentId}/cancel": {
      "post": {
        "summary": "Cancel an appointment",
        "description": "Cancel an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointmentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "return the cancelled appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/appointments/link": {
      "post": {
        "summary": "Link an appointment to a user",
        "description": "Link an appointment to a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "BookingReference",
                  "LastName",
                  "DateOfBirth"
                ],
                "properties": {
                  "BookingReference": {
                    "type": "string",
                    "description": "The booking reference of the appointment"
                  },
                  "LastName": {
                    "type": "string",
                    "description": "The last name of the patient"
                  },
                  "DateOfBirth": {
                    "type": "string",
                    "description": "The date of birth of the patient"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return the linked appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "The appointment is already linked to a user"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/patients": {
      "get": {
        "summary": "Get patient details by user ID",
        "description": "Get patient details by user ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          }
        }
      },
      "post": {
        "summary": "Create a new patient record",
        "description": "Create a new patient record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/user/patients/{patientId}": {
      "get": {
        "summary": "Get patient details by patient ID",
        "description": "Get patient details by patient ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the patient to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          }
        }
      },
      "put": {
        "summary": "Update patient details by patient ID",
        "description": "Update patient details by patient ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the patient to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient details updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Patient not found"
          }
        }
      },
      "delete": {
        "summary": "Delete patient by patient ID",
        "description": "Delete patient by patient ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the patient to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Patient deleted successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        }
      }
    }
  },
  "tags": []
}