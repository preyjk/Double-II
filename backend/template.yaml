AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Parameters:
  StageName:
    Type: String
    Description: "The name of the stage (e.g., dev, prod)"
    Default: "v1"
  BedrockAgentId:
    Type: String
    Description: "id of the bedrock agent"
  BedrockAgentAlias:
    Type: String
    Description: "alias id of the bedrock agent"

Globals:
  Function:
    Timeout: 29

Resources:
  AppointmentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: 'PAY_PER_REQUEST'
      OnDemandThroughput:
        MaxReadRequestUnits: 1
        MaxWriteRequestUnits: 1
  
  WorkingScheduleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
        - AttributeName: DoctorId
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: 'PAY_PER_REQUEST'
      OnDemandThroughput:
        MaxReadRequestUnits: 1
        MaxWriteRequestUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: DoctorIdIndex
          KeySchema:
            - AttributeName: DoctorId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
  
  PatientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
        - AttributeName: UserId
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: 'PAY_PER_REQUEST'
      OnDemandThroughput:
        MaxReadRequestUnits: 1
        MaxWriteRequestUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: UserIdIndex
          KeySchema:
            - AttributeName: UserId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
  
  DoctorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: 'PAY_PER_REQUEST'
      OnDemandThroughput:
        MaxReadRequestUnits: 1
        MaxWriteRequestUnits: 1

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: 'PAY_PER_REQUEST'
      OnDemandThroughput:
        MaxReadRequestUnits: 1
        MaxWriteRequestUnits: 1

  BackendApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref StageName

  ExpressFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 1024
      Policies:
        - AmazonDynamoDBFullAccess
        - Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action: 'bedrock:InvokeAgent'
              Resource: '*'
      Environment:
        Variables:
          APPOINTMENT_TABLE_NAME: !Ref AppointmentsTable
          DOCTOR_TABLE_NAME: !Ref DoctorsTable
          USER_TABLE_NAME: !Ref UsersTable
          PATIENTS_TABLE_NAME: !Ref PatientsTable
          WORKING_SCHEDULE_TABLE_NAME: !Ref WorkingScheduleTable
          API_STAGE_NAME: !Ref StageName
          BEDROCK_AGENT_ID: !Ref BedrockAgentId
          BEDROCK_AGENT_ALIAS: !Ref BedrockAgentAlias
      Events:
        Root:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /
            Method: ANY
        Petstore:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /{proxy+}
            Method: ANY
    Metadata:
      DockerTag: v1
      DockerContext: ./app
      Dockerfile: Dockerfile

Outputs:
  ExpressApi:
    Description: "API Gateway endpoint URL for Prod stage for Express function"
    Value: !Sub "https://${BackendApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"
